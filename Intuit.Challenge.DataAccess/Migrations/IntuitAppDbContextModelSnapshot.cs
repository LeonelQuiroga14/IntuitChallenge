// <auto-generated />
using System;
using Intuit.Challenge.DataAccess.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Intuit.Challenge.DataAccess.Migrations
{
    [DbContext(typeof(IntuitAppDbContext))]
    partial class IntuitAppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Intuit.Challenge.Core.Models.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("CUIT")
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Domicilio")
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("FechaNacimiento")
                        .HasColumnType("datetime");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("TelefonoCelular")
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Apellido" }, "IX_Cliente_apellido");

                    b.HasIndex(new[] { "Nombre" }, "IX_Cliente_nombre");

                    b.HasIndex(new[] { "Nombre", "Apellido", "CUIT" }, "UX_Cliente_nombre_apellido_cuit")
                        .IsUnique()
                        .HasFilter("[CUIT] IS NOT NULL");

                    b.ToTable("Clientes", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Apellido = "Ramirez",
                            CUIT = "20-55675555-7",
                            Domicilio = "Calle falsa 1232",
                            Email = "pedro.ramirez@email.com",
                            FechaNacimiento = new DateTime(2022, 9, 26, 16, 49, 14, 251, DateTimeKind.Utc).AddTicks(8410),
                            Nombre = "Pedro"
                        },
                        new
                        {
                            Id = 2,
                            Apellido = "Abila",
                            Email = "ramon.abila@email.com",
                            FechaNacimiento = new DateTime(2023, 7, 23, 16, 49, 14, 251, DateTimeKind.Utc).AddTicks(8427),
                            Nombre = "Ramon"
                        },
                        new
                        {
                            Id = 3,
                            Apellido = "Díaz",
                            Email = "tomas.diaz@email.com",
                            FechaNacimiento = new DateTime(2019, 12, 31, 16, 49, 14, 251, DateTimeKind.Utc).AddTicks(8428),
                            Nombre = "Tomas"
                        },
                        new
                        {
                            Id = 4,
                            Apellido = "Quiroga",
                            CUIT = "99-40235999-2",
                            Domicilio = "Calle falsa 123",
                            Email = "matias.quiroga@email.com",
                            FechaNacimiento = new DateTime(2023, 8, 22, 16, 49, 14, 251, DateTimeKind.Utc).AddTicks(8429),
                            Nombre = "Matías"
                        },
                        new
                        {
                            Id = 5,
                            Apellido = "Messi",
                            CUIT = "23-41675897-5",
                            Domicilio = "Barcelona  3123",
                            Email = "lionel.messi@email.com",
                            FechaNacimiento = new DateTime(2017, 4, 5, 16, 49, 14, 251, DateTimeKind.Utc).AddTicks(8430),
                            Nombre = "Lionel"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
